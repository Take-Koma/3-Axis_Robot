<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="P_Safety" Id="{860b1fb0-7ebe-4c1e-b9e0-1f1cdd4578cc}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM P_Safety
VAR
	i								:INT;	

	bSafetyRun				AT %Q* :BOOL;												//セーフティーラン
	bSafetyRunCheck			AT %I* :BOOL;												//セーフティーランの確認
	bMainPowerEDMIn			AT %I* :ARRAY[E_Axis.X_Axis..E_Axis.Gripper] OF BOOL;		//非常停止の電源OFF確認
	bMainPowerEDMOut		AT %Q* :BOOL;												//非常停止の電源OFFの結果をセーフティーへ	
	
	bEStopInput1			AT %I* :BOOL;												//非常停止ボタン1_EL2911 input CH.1
	bEStopInput2			AT %I* :BOOL;												//非常停止ボタン2_EL2911 input CH.2
	bEstopOutput			AT %I* :BOOL;												//非常停止解除確認 EL2911 output
	bEStopReset				AT %Q* :BOOL;												//GOTからの非常停止リセットをセーフティーへ
	
	bMoveCheckIn			AT %I* :ARRAY[E_Axis.X_Axis..E_Axis.Gripper] OF BOOL;		//各軸が動いていることを確認
	bAxisMove				AT %Q* :BOOL;												//いずれかの軸が動いていることの結果をセーフティーへ
	bGripSwich				AT %I* :BOOL;												//グリップスイッチ_EL2911 input CH.3
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[	//---セーフティーをランする,セフティーがランしたかもチェック---
	bSafetyRun:=TRUE;
	
	IF bSafetyRun=TRUE AND bSafetyRunCheck=FALSE THEN
		GVL.stAlarm[E_AlarmList.SafetyNotRun].bFlag:=TRUE;
		GVL.stAlarm[E_AlarmList.SafetyNotRun].eMachineStateSet:=E_MachineState.Emergency;
	ELSE
		GVL.stAlarm[E_AlarmList.SafetyNotRun].bFlag:=FALSE;
		GVL.stAlarm[E_AlarmList.SafetyNotRun].eMachineStateSet:=E_MachineState.Base;
	END_IF;
	
	//---非常停止の電源OFF確認をまとめてセーフティーへ---
	bMainPowerEDMOut:= NOT bMainPowerEDMIn[E_Axis.X_Axis] AND NOT bMainPowerEDMIn[E_Axis.Y_Axis] AND NOT bMainPowerEDMIn[E_Axis.Z_Axis] AND NOT bMainPowerEDMIn[E_Axis.Gripper];

	//---非常停止ボタンの制御---
	IF bEStopInput1=FALSE AND bEStopInput2=FALSE AND bEstopOutput=FALSE THEN
		GVL.stAlarm[E_AlarmList.EmergencyStop].bFlag:=TRUE;
		GVL.stAlarm[E_AlarmList.EmergencyStop].eMachineStateSet:=E_MachineState.Emergency;
	ELSIF bEStopInput1=TRUE AND bEStopInput2=TRUE AND bEstopOutput=TRUE THEN
		GVL.stAlarm[E_AlarmList.EmergencyStop].bFlag:=FALSE;
		GVL.stAlarm[E_AlarmList.EmergencyStop].eMachineStateSet:=E_MachineState.Base;
	END_IF;
	
	//---GOTからの非常停止リセットをセーフティーへ---
	bEStopReset:=GVL.mb_Output_Coils[9];
	
	//---各軸が動いているかをまとめてセーフティーへ---
	bAxisMove:= bMoveCheckIn[E_Axis.X_Axis] OR bMoveCheckIn[E_Axis.Y_Axis] OR bMoveCheckIn[E_Axis.Z_Axis] OR bMoveCheckIn[E_Axis.Gripper];
	
	//---軸が動いているときにグリップスイッチが押されてなかったら、マシンステートをワーニングにしてブザーを鳴らす---
	IF bGripSwich=FALSE AND bAxisMove=TRUE THEN
		GVL.stAlarm[E_AlarmList.GripSwichNotOn].bFlag:=TRUE;
		GVL.stAlarm[E_AlarmList.GripSwichNotOn].eMachineStateSet:=E_MachineState.Warning;
	ELSIF GVL.mb_Output_Coils[8]=TRUE THEN
		GVL.stAlarm[E_AlarmList.GripSwichNotOn].bFlag:=FALSE;
		GVL.stAlarm[E_AlarmList.GripSwichNotOn].eMachineStateSet:=E_MachineState.Base;
	END_IF
	
	//各軸が動いていたら、マシンステートをムービングへ
	IF bMoveCheckIn[E_Axis.X_Axis]=TRUE OR bMoveCheckIn[E_Axis.Y_Axis]=TRUE OR bMoveCheckIn[E_Axis.Z_Axis]=TRUE OR bMoveCheckIn[E_Axis.Gripper]=TRUE THEN
		GVL.eMachineState:=E_MachineState.Moving;
	ELSIF GVL.bPower=TRUE THEN
		GVL.eMachineState:=E_MachineState.Stop;
	ELSIF GVL.bPower=FALSE THEN
		GVL.eMachineState:=E_MachineState.Stay;
	END_IF
	
	]]></ST>
    </Implementation>
    <LineIds Name="P_Safety">
      <LineId Id="616" Count="26" />
      <LineId Id="672" Count="0" />
      <LineId Id="674" Count="0" />
      <LineId Id="647" Count="3" />
      <LineId Id="660" Count="11" />
      <LineId Id="164" Count="0" />
      <LineId Id="677" Count="1" />
    </LineIds>
  </POU>
</TcPlcObject>