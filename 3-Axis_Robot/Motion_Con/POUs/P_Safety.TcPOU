<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="P_Safety" Id="{860b1fb0-7ebe-4c1e-b9e0-1f1cdd4578cc}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM P_Safety
VAR
	i								:INT;	
	bAxisMove						:BOOL;												//いずれかの軸が動いていることの結果
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[	//---セーフティーをランする---
	GVL_Safety.bSafetyRun_Stop:=TRUE;
	
	//---非常停止の電源ONを反転してセーフティーのEDMへ---
	GVL_Safety.bFBEStopEDM:= NOT GVL_Safety.bFBEstopOutput;
	
	//---GOTからの非常停止リセットをセーフティーへ---
	GVL_Safety.bFBEStopReset:=GVL_MitsubishiCom.bFromSafetyReset;
	
	//---GOTからの非常停止リセットでセフティーエラーもリセットする---
	GVL_Safety.bSafetyErrAck:=GVL_MitsubishiCom.bFromSafetyReset;

	//---各軸のステータスを読み込む---
	GVL.stAxis[E_Axis.X_Axis].ReadStatus();
	GVL.stAxis[E_Axis.Y_Axis].ReadStatus();
	GVL.stAxis[E_Axis.Z_Axis].ReadStatus();
	GVL.stAxis[E_Axis.Gripper].ReadStatus();
	
	//---各軸が動いているかをまとめる---
	bAxisMove:= GVL.stAxis[E_Axis.X_Axis].Status.Moving OR GVL.stAxis[E_Axis.Y_Axis].Status.Moving OR GVL.stAxis[E_Axis.Z_Axis].Status.Moving OR GVL.stAxis[E_Axis.Gripper].Status.Moving;
	
	//各軸が動いていたら、マシンステートをムービングへ
	GVL_Alarm.fbMachineState.bMoving:=bAxisMove;

	]]></ST>
    </Implementation>
    <LineIds Name="P_Safety">
      <LineId Id="845" Count="1" />
      <LineId Id="918" Count="0" />
      <LineId Id="856" Count="1" />
      <LineId Id="867" Count="2" />
      <LineId Id="926" Count="0" />
      <LineId Id="928" Count="0" />
      <LineId Id="927" Count="0" />
      <LineId Id="870" Count="7" />
      <LineId Id="915" Count="0" />
      <LineId Id="890" Count="0" />
      <LineId Id="937" Count="0" />
      <LineId Id="936" Count="0" />
      <LineId Id="900" Count="0" />
      <LineId Id="942" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>