<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_MachineState" Id="{c973bc40-a96e-4db3-9daa-2f59595f3f57}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_MachineState
VAR_INPUT
	bBase				:BOOL :=TRUE;		//何もなし
	bCritical			:BOOL;				//クリティカルの発生
	bError				:BOOL;				//エラーの発生
	bWarning			:BOOL;				//ワーニングの発生
	bStay				:BOOL;				//McPowerがOFF
	bStop				:BOOL;				//McPowerがON
	bMoving				:BOOL;				//軸動作中

END_VAR
VAR_OUTPUT
	eMachineState		:E_MachineState;	//マシーンステートを出力
	bStopMachine		:BOOL;				//モーションファンクションブロック停止
END_VAR
VAR
	i					:INT:=1;
	al_index			:INT:=1;
	p_alarms			: ARRAY [1..GVL_Alarm.iMaxAlarm] OF POINTER TO FB_Alarm;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[//--発生中アラームを集計---
	//アラームをリセット
	bCritical:=FALSE;
	bError:=FALSE;
	bError:=FALSE;
	
	//アラーム集計
	FOR i := 1	TO al_index -1  BY 1 DO
		CASE p_alarms[i]^.eSeverity OF
			TcEventSeverity.Critical:
				IF p_alarms[i]^.bRaised=TRUE THEN
					bCritical:=TRUE;
				END_IF
				
			TcEventSeverity.Error:
				IF p_alarms[i]^.bRaised=TRUE THEN
					bError:=TRUE;
				END_IF
			
			TcEventSeverity.Warning:
				IF p_alarms[i]^.bRaised=TRUE THEN
					bWarning:=TRUE;
				END_IF
			
		END_CASE
		
	END_FOR


//---発生アラームの重いほうからマシンステートに登録---
	IF bCritical=TRUE THEN
		eMachineState:=E_MachineState.Critical;
		bStopMachine:=TRUE;
		
	ELSIF bError=TRUE THEN
		eMachineState:=E_MachineState.Error;
		bStopMachine:=TRUE;
	
	ELSIF bWarning=TRUE THEN
		eMachineState:=E_MachineState.Warning;
		bStopMachine:=FALSE;
		
	ELSIF bStay=TRUE THEN
		eMachineState:=E_MachineState.Stay;
		bStopMachine:=FALSE;
		
	ELSIF bStop=TRUE THEN
		eMachineState:=E_MachineState.Stop;
		bStopMachine:=FALSE;
		
	ELSIF bMoving=TRUE THEN
		eMachineState:=E_MachineState.Moving;
		bStopMachine:=FALSE;

	ELSIF bBase=TRUE THEN
		eMachineState:=E_MachineState.Base;
		bStopMachine:=FALSE;
	END_IF]]></ST>
    </Implementation>
    <Method Name="reg_alarm" Id="{c7217401-5976-4e6a-8be4-b75e078b5d2f}">
      <Declaration><![CDATA[METHOD reg_alarm : BOOL
VAR_INPUT
	p_alarm	:POINTER TO FB_Alarm;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF GVL_Alarm.iMaxAlarm < al_index THEN
	reg_alarm:=FALSE;
	RETURN;
END_IF

p_alarms[al_index] := p_alarm;
al_index := al_index + 1;
reg_alarm:=TRUE;]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_MachineState">
      <LineId Id="97" Count="0" />
      <LineId Id="153" Count="2" />
      <LineId Id="162" Count="0" />
      <LineId Id="156" Count="1" />
      <LineId Id="130" Count="0" />
      <LineId Id="133" Count="0" />
      <LineId Id="135" Count="0" />
      <LineId Id="145" Count="2" />
      <LineId Id="137" Count="0" />
      <LineId Id="140" Count="0" />
      <LineId Id="148" Count="0" />
      <LineId Id="151" Count="0" />
      <LineId Id="149" Count="0" />
      <LineId Id="139" Count="0" />
      <LineId Id="163" Count="0" />
      <LineId Id="165" Count="1" />
      <LineId Id="164" Count="0" />
      <LineId Id="167" Count="0" />
      <LineId Id="136" Count="0" />
      <LineId Id="152" Count="0" />
      <LineId Id="132" Count="0" />
      <LineId Id="128" Count="1" />
      <LineId Id="127" Count="0" />
      <LineId Id="98" Count="7" />
      <LineId Id="158" Count="0" />
      <LineId Id="160" Count="1" />
      <LineId Id="159" Count="0" />
      <LineId Id="106" Count="14" />
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="FB_MachineState.reg_alarm">
      <LineId Id="14" Count="0" />
      <LineId Id="16" Count="0" />
      <LineId Id="18" Count="0" />
      <LineId Id="17" Count="0" />
      <LineId Id="15" Count="0" />
      <LineId Id="12" Count="1" />
      <LineId Id="19" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>