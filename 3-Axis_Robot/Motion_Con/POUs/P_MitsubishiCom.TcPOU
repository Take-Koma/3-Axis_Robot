<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="P_MitsubishiCom" Id="{7551431c-0546-4892-8591-c118fe27ff05}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM P_MitsubishiCom
VAR
	i								:INT;
	
	fbMcPowerTon					:ton;
	fbMcPowerREdge					:R_TRIG;
	fbMcPowerFEdge					:F_TRIG;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[//---GVLのModbus TCPの変数をGVL_Mitsubishiの変数に書き込み---

	(*Modbusマスター読み取りのみ	GVL.mb_Input_Coils*)
	GVL.mb_Input_Coils[4]										:=GVL_MitsubishiCom.bToMcPowerOn;
	GVL.mb_Input_Coils[5]										:=GVL_MitsubishiCom.bToMcMoveHomeOn;
	GVL.mb_Input_Coils[6]										:=GVL_MitsubishiCom.bToMcHaltOn;
	GVL.mb_Input_Coils[7]										:=GVL_MitsubishiCom.bToCameraSoftWareTrigger;
	GVL.mb_Input_Coils[8]										:=GVL_MitsubishiCom.bToAlarmReset;
	GVL.mb_Input_Coils[9]										:=GVL_MitsubishiCom.bToSafetyReset;
	
	(*Modbusマスターが読み書き可能	GVL.mb_Output_Coils*)
	GVL_MitsubishiCom.bFromEStop								:=GVL.mb_Output_Coils[1];
	GVL_MitsubishiCom.bFromKeySwitchOpen						:=GVL.mb_Output_Coils[2];
	GVL_MitsubishiCom.bFromKeySwitchClose						:=GVL.mb_Output_Coils[3];
	GVL_MitsubishiCom.bFromMcPowerOn							:=GVL.mb_Output_Coils[4];
	GVL_MitsubishiCom.bFromMcMoveHomeOn							:=GVL.mb_Output_Coils[5];
	GVL_MitsubishiCom.bFromMcHaltOn								:=GVL.mb_Output_Coils[6];
	GVL_MitsubishiCom.bFromCameraTrigger						:=GVL.mb_Output_Coils[7];
	GVL_MitsubishiCom.bFromAlarmReset							:=GVL.mb_Output_Coils[8];
	GVL_MitsubishiCom.bFromSafetyReset							:=GVL.mb_Output_Coils[9];
	GVL_MitsubishiCom.bFromGripSwich							:=GVL.mb_Output_Coils[10];
	GVL_MitsubishiCom.bFromXAxisJogStart						:=GVL.mb_Output_Coils[16];
	GVL_MitsubishiCom.bFromYAxisJogStart						:=GVL.mb_Output_Coils[17];
	GVL_MitsubishiCom.bFromZAxisJogStart						:=GVL.mb_Output_Coils[18];
	GVL_MitsubishiCom.bFromGripperJogStart						:=GVL.mb_Output_Coils[19];

	(*Modbusマスター読み取りのみ	GVL.mb_Input_Registers*)
	//変数なし
	
	(*Modbusマスターが読み書き可能	GVL.mb_Output_Registers*)
	GVL_MitsubishiCom.wFromXAxisJogTarget						:=GVL.mb_Output_Registers[16];
	GVL_MitsubishiCom.wFromYAxisJogTarget						:=GVL.mb_Output_Registers[17];
	GVL_MitsubishiCom.wFromZAxisJogTarget						:=GVL.mb_Output_Registers[18];
	GVL_MitsubishiCom.wFromGripperJogTarget						:=GVL.mb_Output_Registers[19];


//-----三菱へ出力-----
	GVL_MitsubishiCom.bTwinCATModbusStart:=TRUE;
	GVL_MitsubishiCom.bTwinCATRun:=TRUE;
	
	IF GVL_Alarm.fbMachineState.eMachineState < E_MachineState.Stay THEN
		GVL_MitsubishiCom.bTwinCATAlarm:=FALSE;
	ELSE
		GVL_MitsubishiCom.bTwinCATAlarm:=TRUE;
	END_IF

//---三菱より入力---
	IF GVL_MitsubishiCom.bMitsubishiRun=FALSE THEN
		RETURN;
	ELSIF GVL_MitsubishiCom.bMitsubishiModbusStart=FALSE THEN
		RETURN;
	END_IF

//--スイッチ状態をアラームにセット---(GOTのスイッチ表示の変わり)


//-----McPoerのOnとOff------
	fbMcPowerREdge(CLK:=GVL_MitsubishiCom.bFromMcPowerOn,Q=>);
	fbMcPowerFEdge(CLK:=GVL_MitsubishiCom.bToMcPowerOn,Q=>);
	fbMcPowerTon(IN:=GVL_MitsubishiCom.bFromMcPowerOn,PT:=T#3S,Q=>,ET=>);

	IF GVL.bPower=FALSE AND fbMcPowerREdge.Q=TRUE THEN;
		GVL.bPower:=TRUE;
	ELSIF GVL.bPower=TRUE AND fbMcPowerTon.Q=TRUE THEN ;
		GVL.bPower:=FALSE;
	ELSIF fbMcPowerFEdge.Q=TRUE THEN;
		GVL.bPower:=FALSE;
	END_IF;
	
	IF GVL.bMcPowerStatus[E_Axis.X_Axis]=TRUE AND GVL.bMcPowerStatus[E_Axis.Y_Axis]=TRUE AND GVL.bMcPowerStatus[E_Axis.Z_Axis]=TRUE AND GVL.bMcPowerStatus[E_Axis.Gripper]=TRUE THEN;
		GVL_MitsubishiCom.bToMcPowerOn:=TRUE;
	ELSE;
		GVL_MitsubishiCom.bToMcPowerOn:=FALSE;
	END_IF;

	//マシーンステート切り替え
	GVL_Alarm.fbMachineState.bStop:=GVL.bPower;
	GVL_Alarm.fbMachineState.bStay:= NOT GVL.bPower;
	
//-----ゼロポジション実行-----
	IF GVL_MitsubishiCom.bToMcPowerOn=TRUE THEN;
		GVL.bHome:=GVL_MitsubishiCom.bFromMcMoveHomeOn;
	END_IF

	IF GVL.stMoveHomingOut[E_Axis.X_Axis].Busy=TRUE OR GVL.stMoveHomingOut[E_Axis.Y_Axis].Busy=TRUE OR GVL.stMoveHomingOut[E_Axis.Z_Axis].Busy=TRUE OR GVL.stMoveHomingOut[E_Axis.Gripper].Busy=TRUE THEN;
		GVL_MitsubishiCom.bToMcMoveHomeOn:=TRUE;
	ELSE;
		GVL_MitsubishiCom.bToMcMoveHomeOn:=FALSE;
	END_IF;


//-----Jog実行-----
	IF GVL_MitsubishiCom.bToMcPowerOn=TRUE THEN;
		//X軸
		GVL.bJog[E_Axis.X_Axis]:=GVL_MitsubishiCom.bFromXAxisJogStart;
		GVL.lrJogPosition[E_Axis.X_Axis]:=GVL_MitsubishiCom.wFromXAxisJogTarget;
		
		//Y軸
		GVL.bJog[E_Axis.Y_Axis]:=GVL_MitsubishiCom.bFromYAxisJogStart;
		GVL.lrJogPosition[E_Axis.Y_Axis]:=GVL_MitsubishiCom.wFromYAxisJogTarget;
		
		//Z軸 ステージにグリッパーがあたるのでZ軸は300無しで
		GVL.bJog[E_Axis.Z_Axis]:=GVL_MitsubishiCom.bFromZAxisJogStart;
		GVL.lrJogPosition[E_Axis.Z_Axis]:=GVL_MitsubishiCom.wFromZAxisJogTarget;
		IF GVL.lrJogPosition[E_Axis.Z_Axis]>230 THEN;
			GVL.lrJogPosition[E_Axis.Z_Axis]:=225;
		END_IF

		//グリッパー
		GVL.bJog[E_Axis.Gripper]:=GVL_MitsubishiCom.bFromGripperJogStart;
		GVL.lrJogPosition[E_Axis.Gripper]:=WORD_TO_INT(GVL_MitsubishiCom.wFromGripperJogTarget);
	END_IF


//-----停止ボタン----
	IF GVL_MitsubishiCom.bToMcPowerOn=TRUE THEN;
		GVL.bHalt:=GVL_MitsubishiCom.bFromMcHaltOn;
	END_IF

	

//-----非常停止ボタン-----
	IF GVL_MitsubishiCom.bToMcPowerOn=TRUE THEN;
		GVL.bStop:=NOT GVL_MitsubishiCom.bFromEStop;
	END_IF


//-----カメラシャッター応答-----
	GVL_MitsubishiCom.bToCameraSoftWareTrigger:=GVL_MitsubishiCom.bFromCameraTrigger;

//-----アラームリセット応答-----
	GVL_MitsubishiCom.bToAlarmReset:=GVL_MitsubishiCom.bFromAlarmReset;

//-----セーフティー非常停止リセット応答-----
	GVL_MitsubishiCom.bToSafetyReset:=GVL_MitsubishiCom.bFromSafetyReset;
]]></ST>
    </Implementation>
    <LineIds Name="P_MitsubishiCom">
      <LineId Id="1539" Count="50" />
      <LineId Id="1599" Count="22" />
      <LineId Id="1684" Count="0" />
      <LineId Id="1622" Count="0" />
      <LineId Id="1682" Count="0" />
      <LineId Id="1680" Count="0" />
      <LineId Id="1623" Count="56" />
      <LineId Id="940" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>