<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="P_Motion" Id="{f27a55a5-997f-454a-b871-3cb76ed937db}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM P_Motion
VAR
	eAxis							:E_Axis;
	
	fbMcPowerTon					:ton;
	fbMcPowerREdge					:R_TRIG;
	fbMcPowerFEdge					:F_TRIG;
	
	fbMcJogXAxisFEdge				:F_TRIG;
	fbMcJogYAxisFEdge				:F_TRIG;
	fbMcJogZAxisFEdge				:F_TRIG;
	fbMcJogGripperFEdge				:F_TRIG;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[	//---各軸のステータスを読み込む---
	GVL_Axis.stAxis[E_Axis.X_Axis].ReadStatus();
	GVL_Axis.stAxis[E_Axis.Y_Axis].ReadStatus();
	GVL_Axis.stAxis[E_Axis.Z_Axis].ReadStatus();
	GVL_Axis.stAxis[E_Axis.Gripper].ReadStatus();
	
	//---各軸のステータスを三菱へ出力---
	//Error
	GVL_MitsubishiCom.bToXAxisError:=GVL_Axis.stAxis[E_Axis.X_Axis].Status.Error;
	GVL_MitsubishiCom.bToYAxisError:=GVL_Axis.stAxis[E_Axis.Y_Axis].Status.Error;
	GVL_MitsubishiCom.bToZAxisError:=GVL_Axis.stAxis[E_Axis.Z_Axis].Status.Error;
	GVL_MitsubishiCom.bToGripperError:=GVL_Axis.stAxis[E_Axis.Gripper].Status.Error;
	//Moving
	GVL_MitsubishiCom.bToXAsisMoving:=GVL_Axis.stAxis[E_Axis.X_Axis].Status.Moving;
	GVL_MitsubishiCom.bToYAsisMoving:=GVL_Axis.stAxis[E_Axis.Y_Axis].Status.Moving;
	GVL_MitsubishiCom.bToZAsisMoving:=GVL_Axis.stAxis[E_Axis.Z_Axis].Status.Moving;
	GVL_MitsubishiCom.bToGripperMoving:=GVL_Axis.stAxis[E_Axis.Gripper].Status.Moving;
	//ActPos,GOTで100で割って小数点二位まで表示するために100倍にする
	GVL_MitsubishiCom.wToXAxisActPos:=LREAL_TO_WORD(100*GVL_Axis.stAxis[E_Axis.X_Axis].NcToPlc.ActPos);
	GVL_MitsubishiCom.wToYAxisActPos:=LREAL_TO_WORD(100*GVL_Axis.stAxis[E_Axis.Y_Axis].NcToPlc.ActPos);
	GVL_MitsubishiCom.wToZAxisActPos:=LREAL_TO_WORD(100*GVL_Axis.stAxis[E_Axis.Z_Axis].NcToPlc.ActPos);
	GVL_MitsubishiCom.wToGripperActPos:=LREAL_TO_WORD(100*GVL_Axis.stAxis[E_Axis.Gripper].NcToPlc.ActPos);
	
	//---各軸が動いているかをまとめる---
	GVL_Motion.bAxisMove:= GVL_Axis.stAxis[E_Axis.X_Axis].Status.Moving 
						OR GVL_Axis.stAxis[E_Axis.Y_Axis].Status.Moving
						OR GVL_Axis.stAxis[E_Axis.Z_Axis].Status.Moving 
						OR GVL_Axis.stAxis[E_Axis.Gripper].Status.Moving;
	
	//---マシンステートのファンクションブロックが停止出力していたら停止---
	GVL_Motion.bStop:=GVL_Alarm.fbMachineState.bStopMachine;

	//---一時停止ボタン---
	GVL_Motion.bHalt:=GVL_MitsubishiCom.bFromMcHaltOn;
	
	GVL_MitsubishiCom.bToMcHaltOn:=GVL_Motion.fbMcHalt[E_Axis.X_Axis].Done
								AND GVL_Motion.fbMcHalt[E_Axis.Y_Axis].Done
								AND GVL_Motion.fbMcHalt[E_Axis.Z_Axis].Done
								AND GVL_Motion.fbMcHalt[E_Axis.Gripper].Done;
	
	//---軸エラーのリセットボタン---
	GVL_Motion.bReset:=GVL_MitsubishiCom.bFromAxisErrorReset;
	
	//-----McPoerのOnとOff------
	fbMcPowerREdge(CLK:=GVL_MitsubishiCom.bFromMcPowerOn,Q=>);
	fbMcPowerFEdge(CLK:=GVL_MitsubishiCom.bToMcPowerOn,Q=>);
	fbMcPowerTon(IN:=GVL_MitsubishiCom.bFromMcPowerOn,PT:=T#3S,Q=>,ET=>);

	IF GVL_Motion.bPower=FALSE AND fbMcPowerREdge.Q=TRUE THEN;
		GVL_Motion.bPower:=TRUE;
	ELSIF GVL_Motion.bPower=TRUE AND fbMcPowerTon.Q=TRUE THEN ;
		GVL_Motion.bPower:=FALSE;
	ELSIF fbMcPowerFEdge.Q=TRUE THEN;
		GVL_Motion.bPower:=FALSE;
	END_IF;
	
	GVL_MitsubishiCom.bToMcPowerOn:= GVL_Motion.fbMcPower[E_Axis.X_Axis].Status
									AND GVL_Motion.fbMcPower[E_Axis.Y_Axis].Status 
									AND GVL_Motion.fbMcPower[E_Axis.Z_Axis].Status 
									AND GVL_Motion.fbMcPower[E_Axis.Gripper].Status;

	
	//-----ゼロポジション実行-----
	IF GVL_MitsubishiCom.bToMcPowerOn=TRUE THEN;
		GVL_Motion.bHome:=GVL_MitsubishiCom.bFromMcMoveHomeOn;
	END_IF
	
	GVL_MitsubishiCom.bToMcMoveHomeOn:=GVL_Motion.fbMcMoveHome[E_Axis.X_Axis].Busy
									OR GVL_Motion.fbMcMoveHome[E_Axis.Y_Axis].Busy
									OR GVL_Motion.fbMcMoveHome[E_Axis.Z_Axis].Busy
									OR GVL_Motion.fbMcMoveHome[E_Axis.Gripper].Busy;

	//-----定位置Jog実行-----
	IF GVL_MitsubishiCom.bToMcPowerOn=TRUE THEN;
		//X軸
		GVL_Motion.bJog[E_Axis.X_Axis]:=GVL_MitsubishiCom.bFromXAxisJogStart;
		GVL_Motion.lrJogPosition[E_Axis.X_Axis]:=GVL_MitsubishiCom.wFromXAxisJogTarget;
		
		//Y軸
		GVL_Motion.bJog[E_Axis.Y_Axis]:=GVL_MitsubishiCom.bFromYAxisJogStart;
		GVL_Motion.lrJogPosition[E_Axis.Y_Axis]:=GVL_MitsubishiCom.wFromYAxisJogTarget;
		
		//Z軸 ステージにグリッパーがあたるのでZ軸は300無しで
		GVL_Motion.bJog[E_Axis.Z_Axis]:=GVL_MitsubishiCom.bFromZAxisJogStart;
		GVL_Motion.lrJogPosition[E_Axis.Z_Axis]:=GVL_MitsubishiCom.wFromZAxisJogTarget;
		IF GVL_Motion.lrJogPosition[E_Axis.Z_Axis]>230 THEN;
			GVL_Motion.lrJogPosition[E_Axis.Z_Axis]:=225;
		END_IF

		//グリッパー
		GVL_Motion.bJog[E_Axis.Gripper]:=GVL_MitsubishiCom.bFromGripperJogStart;
		GVL_Motion.lrJogPosition[E_Axis.Gripper]:=WORD_TO_INT(GVL_MitsubishiCom.wFromGripperJogTarget);
	END_IF

	//-----連続Jog実行-----
	IF GVL_MitsubishiCom.bToMcPowerOn=TRUE THEN;
		//X軸
		fbMcJogXAxisFEdge(CLK:=GVL_MitsubishiCom.bFromXAxisJogPlus
							OR GVL_MitsubishiCom.bFromXAxisJogMinus
							OR GVL_MitsubishiCom.bFromXAxisJogPlusHigh
							OR GVL_MitsubishiCom.bFromXAxisJogMinusHigh,
						Q=>
						);
		GVL_Motion.fbMcMoveJogSub[E_Axis.X_Axis].Execute:= GVL_MitsubishiCom.bFromXAxisJogPlus
														OR GVL_MitsubishiCom.bFromXAxisJogMinus
														OR GVL_MitsubishiCom.bFromXAxisJogPlusHigh
														OR GVL_MitsubishiCom.bFromXAxisJogMinusHigh;
		
		GVL_Motion.fbMcHaltJogSub[E_Axis.X_Axis].Execute:=fbMcJogXAxisFEdge.Q;
		
		IF GVL_MitsubishiCom.bFromXAxisJogPlus=TRUE THEN
			GVL_Motion.fbMcMoveJogSub[E_Axis.X_Axis].Position:=300;
			GVL_Motion.fbMcMoveJogSub[E_Axis.X_Axis].Velocity:=50;
		ELSIF GVL_MitsubishiCom.bFromXAxisJogPlusHigh=TRUE THEN
			GVL_Motion.fbMcMoveJogSub[E_Axis.X_Axis].Position:=300;
			GVL_Motion.fbMcMoveJogSub[E_Axis.X_Axis].Velocity:=150;
		ELSIF GVL_MitsubishiCom.bFromXAxisJogMinus=TRUE THEN
			GVL_Motion.fbMcMoveJogSub[E_Axis.X_Axis].Position:=0;
			GVL_Motion.fbMcMoveJogSub[E_Axis.X_Axis].Velocity:=50;
		ELSIF GVL_MitsubishiCom.bFromXAxisJogMinusHigh=TRUE THEN
			GVL_Motion.fbMcMoveJogSub[E_Axis.X_Axis].Position:=0;
			GVL_Motion.fbMcMoveJogSub[E_Axis.X_Axis].Velocity:=150;
		END_IF

		//Y軸
		fbMcJogYAxisFEdge(CLK:=GVL_MitsubishiCom.bFromYAxisJogPlus
							OR GVL_MitsubishiCom.bFromYAxisJogMinus
							OR GVL_MitsubishiCom.bFromYAxisJogPlusHigh
							OR GVL_MitsubishiCom.bFromYAxisJogMinusHigh,
						Q=>
						);
		GVL_Motion.fbMcMoveJogSub[E_Axis.Y_Axis].Execute:= GVL_MitsubishiCom.bFromYAxisJogPlus
														OR GVL_MitsubishiCom.bFromYAxisJogMinus
														OR GVL_MitsubishiCom.bFromYAxisJogPlusHigh
														OR GVL_MitsubishiCom.bFromYAxisJogMinusHigh;
		
		GVL_Motion.fbMcHaltJogSub[E_Axis.Y_Axis].Execute:=fbMcJogYAxisFEdge.Q;
		
		IF GVL_MitsubishiCom.bFromYAxisJogPlus=TRUE THEN
			GVL_Motion.fbMcMoveJogSub[E_Axis.Y_Axis].Position:=300;
			GVL_Motion.fbMcMoveJogSub[E_Axis.Y_Axis].Velocity:=50;
		ELSIF GVL_MitsubishiCom.bFromYAxisJogPlusHigh=TRUE THEN
			GVL_Motion.fbMcMoveJogSub[E_Axis.Y_Axis].Position:=300;
			GVL_Motion.fbMcMoveJogSub[E_Axis.Y_Axis].Velocity:=150;
		ELSIF GVL_MitsubishiCom.bFromYAxisJogMinus=TRUE THEN
			GVL_Motion.fbMcMoveJogSub[E_Axis.Y_Axis].Position:=0;
			GVL_Motion.fbMcMoveJogSub[E_Axis.Y_Axis].Velocity:=50;
		ELSIF GVL_MitsubishiCom.bFromYAxisJogMinusHigh=TRUE THEN
			GVL_Motion.fbMcMoveJogSub[E_Axis.Y_Axis].Position:=0;
			GVL_Motion.fbMcMoveJogSub[E_Axis.Y_Axis].Velocity:=150;
		END_IF

		//Z軸
		fbMcJogZAxisFEdge(CLK:=GVL_MitsubishiCom.bFromZAxisJogPlus
							OR GVL_MitsubishiCom.bFromZAxisJogMinus
							OR GVL_MitsubishiCom.bFromZAxisJogPlusHigh
							OR GVL_MitsubishiCom.bFromZAxisJogMinusHigh,
						Q=>
						);
		GVL_Motion.fbMcMoveJogSub[E_Axis.Z_Axis].Execute:= GVL_MitsubishiCom.bFromZAxisJogPlus
														OR GVL_MitsubishiCom.bFromZAxisJogMinus
														OR GVL_MitsubishiCom.bFromZAxisJogPlusHigh
														OR GVL_MitsubishiCom.bFromZAxisJogMinusHigh;
		
		GVL_Motion.fbMcHaltJogSub[E_Axis.Z_Axis].Execute:=fbMcJogZAxisFEdge.Q;
		
		IF GVL_MitsubishiCom.bFromZAxisJogPlus=TRUE THEN
			GVL_Motion.fbMcMoveJogSub[E_Axis.Z_Axis].Position:=225;
			GVL_Motion.fbMcMoveJogSub[E_Axis.Z_Axis].Velocity:=50;
		ELSIF GVL_MitsubishiCom.bFromZAxisJogPlusHigh=TRUE THEN
			GVL_Motion.fbMcMoveJogSub[E_Axis.Z_Axis].Position:=225;
			GVL_Motion.fbMcMoveJogSub[E_Axis.Z_Axis].Velocity:=150;
		ELSIF GVL_MitsubishiCom.bFromZAxisJogMinus=TRUE THEN
			GVL_Motion.fbMcMoveJogSub[E_Axis.Z_Axis].Position:=0;
			GVL_Motion.fbMcMoveJogSub[E_Axis.Z_Axis].Velocity:=50;
		ELSIF GVL_MitsubishiCom.bFromZAxisJogMinusHigh=TRUE THEN
			GVL_Motion.fbMcMoveJogSub[E_Axis.Z_Axis].Position:=0;
			GVL_Motion.fbMcMoveJogSub[E_Axis.Z_Axis].Velocity:=150;
		END_IF

		//Gripper
		fbMcJogGripperFEdge(CLK:=  GVL_MitsubishiCom.bFromGripperJogPlus
								OR GVL_MitsubishiCom.bFromGripperJogMinus
								OR GVL_MitsubishiCom.bFromGripperJogPlusHigh
								OR GVL_MitsubishiCom.bFromGripperJogMinusHigh,
							Q=>
							);
		GVL_Motion.fbMcMoveJogSub[E_Axis.Gripper].Execute:=GVL_MitsubishiCom.bFromGripperJogPlus
														OR GVL_MitsubishiCom.bFromGripperJogMinus
														OR GVL_MitsubishiCom.bFromGripperJogPlusHigh
														OR GVL_MitsubishiCom.bFromGripperJogMinusHigh;
		
		GVL_Motion.fbMcHaltJogSub[E_Axis.Gripper].Execute:=fbMcJogGripperFEdge.Q;
		
		IF GVL_MitsubishiCom.bFromGripperJogPlus=TRUE THEN
			GVL_Motion.fbMcMoveJogSub[E_Axis.Gripper].Position:=160;
			GVL_Motion.fbMcMoveJogSub[E_Axis.Gripper].Velocity:=100;
		ELSIF GVL_MitsubishiCom.bFromGripperJogPlusHigh=TRUE THEN
			GVL_Motion.fbMcMoveJogSub[E_Axis.Gripper].Position:=160;
			GVL_Motion.fbMcMoveJogSub[E_Axis.Gripper].Velocity:=500;
		ELSIF GVL_MitsubishiCom.bFromGripperJogMinus=TRUE THEN
			GVL_Motion.fbMcMoveJogSub[E_Axis.Gripper].Position:=-160;
			GVL_Motion.fbMcMoveJogSub[E_Axis.Gripper].Velocity:=100;
		ELSIF GVL_MitsubishiCom.bFromGripperJogMinusHigh=TRUE THEN
			GVL_Motion.fbMcMoveJogSub[E_Axis.Gripper].Position:=-160;
			GVL_Motion.fbMcMoveJogSub[E_Axis.Gripper].Velocity:=500;
		END_IF
														
	END_IF
	
	//---図形描画実行---
	IF GVL_MitsubishiCom.bToMcPowerOn=TRUE THEN;
		GVL_Motion.bWriteMoveStart:=GVL_MitsubishiCom.bFromWriteStart;
	END_IF

	//---ピック＆プレース実行---
	IF GVL_MitsubishiCom.bToMcPowerOn=TRUE THEN;
		GVL_Motion.bPickAndPlaceStart:=GVL_MitsubishiCom.bFromPickAndPlaceStart;
	END_IF
	
	//---アクションをコールして軸を起動---
	FOR eAxis:= E_Axis.X_Axis TO E_Axis.Gripper DO
		aMotion();
	END_FOR;]]></ST>
    </Implementation>
    <Action Name="aMotion" Id="{7128f73f-11b3-4c17-add6-4b6df319662d}">
      <Implementation>
        <ST><![CDATA[//パワーON
	GVL_Motion.fbMcPower[eAxis](
		Axis			:=GVL_Axis.stAxis[eAxis],
		Enable			:=GVL_Motion.bPower,
		Enable_Positive	:=GVL_Motion.bPower,
		Enable_Negative	:=GVL_Motion.bPower,
		Override		:=100,
		Status			=>,
		Busy			=>,
		Active			=>,
		Error			=>,
		ErrorID			=>
	);
	
//ホーミング
	GVL_Motion.fbMcMoveHome[eAxis](
		Axis			:=GVL_Axis.stAxis[eAxis],
		Execute			:=GVL_Motion.bHome,
		Position		:=0,
		Velocity		:=50,
		Done			=>,
		Busy			=>,
		Active			=>,
		CommandAborted	=>,
		Error			=>,
		ErrorID			=>
	);	

//定位置ジョグ
	GVL_Motion.fbMcMoveJog[eAxis](
		Axis			:=GVL_Axis.stAxis[eAxis],
		Execute			:=GVL_Motion.bJog[eAxis],
		Position		:=GVL_Motion.lrJogPosition[eAxis],
		Velocity		:=50,
		Done			=>,
		Busy			=>,
		Active			=>,
		CommandAborted	=>,
		Error			=>,
		ErrorID			=>
	);	

//連続ジョグ
	//起動
	GVL_Motion.fbMcMoveJogSub[eAxis](
		Axis			:=GVL_Axis.stAxis[eAxis],
	);
	//停止
	GVL_Motion.fbMCHaltJogSub[eAxis](
		Axis			:=GVL_Axis.stAxis[eAxis],
	);
	
//全軸一時停止
	GVL_Motion.fbMCHalt[eAxis](
		Axis			:=GVL_Axis.stAxis[eAxis],
		Execute			:=GVL_Motion.bHalt,
		Done			=>,
		Busy			=>,
		Active			=>,
		CommandAborted	=>,
		Error			=>,
		ErrorID			=>
	);

//全軸ストップ
	GVL_Motion.fbMCStop[eAxis](
		Axis			:=GVL_Axis.stAxis[eAxis],
		Execute			:=GVL_Motion.bStop,
		Done			=>,
		Busy			=>,
		Active			=>,
		CommandAborted	=>,
		Error			=>,
		ErrorID			=>
	);
	
//全軸リセット
	GVL_Motion.fbMcReset[eAxis](
		Axis			:=GVL_Axis.stAxis[eAxis],
		Execute			:=GVL_Motion.bReset,
		Done			=>,
		Busy			=>,
		Error			=>,
		ErrorID			=>
	);]]></ST>
      </Implementation>
    </Action>
    <LineIds Name="P_Motion">
      <LineId Id="361" Count="122" />
      <LineId Id="528" Count="0" />
      <LineId Id="530" Count="25" />
      <LineId Id="529" Count="0" />
      <LineId Id="556" Count="27" />
      <LineId Id="585" Count="27" />
      <LineId Id="484" Count="15" />
      <LineId Id="69" Count="0" />
    </LineIds>
    <LineIds Name="P_Motion.aMotion">
      <LineId Id="107" Count="12" />
      <LineId Id="190" Count="0" />
      <LineId Id="121" Count="12" />
      <LineId Id="217" Count="0" />
      <LineId Id="204" Count="11" />
      <LineId Id="153" Count="0" />
      <LineId Id="238" Count="1" />
      <LineId Id="252" Count="0" />
      <LineId Id="241" Count="1" />
      <LineId Id="240" Count="0" />
      <LineId Id="253" Count="0" />
      <LineId Id="255" Count="1" />
      <LineId Id="254" Count="0" />
      <LineId Id="219" Count="0" />
      <LineId Id="154" Count="31" />
      <LineId Id="53" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>