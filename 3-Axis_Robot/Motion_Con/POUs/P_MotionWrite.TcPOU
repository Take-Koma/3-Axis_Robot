<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="P_MotionWrite" Id="{a13c4fb8-4faa-4e1e-970b-514f68ab2a7e}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM P_MotionWrite
VAR
	eStep				:E_WriteStep:=E_WriteStep.Stay;
	iStep				:INT:=0;
	fbMcMoveAbs			:ARRAY[E_Axis.X_Axis..E_Axis.Gripper] OF MC_MoveAbsolute;
	fbMcMoveAbsSub		:ARRAY[E_Axis.X_Axis..E_Axis.Z_Axis] OF MC_MoveAbsolute;
	fbGripperGripAngle	:FB_Gripper_GripAngle;
	
	stCircleSettings	:ARRAY[1..32] OF ST_CircleSettings;
	stEllipseSettings	:ARRAY[1..32] OF ST_EllipseSetting;

	fbMotionShapeWrite	:FB_MotionShapeWrite(fbMcMoveAbs[E_Axis.X_Axis],
											fbMcMoveAbs[E_Axis.Y_Axis],
											fbMcMoveAbs[E_Axis.Z_Axis],
											fbMcMoveAbs[E_Axis.Gripper],
											fbMcMoveAbsSub[E_Axis.X_Axis],
											fbMcMoveAbsSub[E_Axis.Y_Axis],
											fbMcMoveAbsSub[E_Axis.Z_Axis]);

END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[//WriteMotin実行中か確認
IF eStep<>E_WriteStep.Stay THEN
	
	//McMoveのコマンドアボートをチェック
	IF fbMcMoveAbs[E_Axis.X_Axis].CommandAborted=TRUE
		OR fbMcMoveAbs[E_Axis.Y_Axis].CommandAborted=TRUE
		OR fbMcMoveAbs[E_Axis.Z_Axis].CommandAborted=TRUE
		OR fbMcMoveAbs[E_Axis.Gripper].CommandAborted=TRUE
		OR fbMcMoveAbsSub[E_Axis.X_Axis].CommandAborted=TRUE
		OR fbMcMoveAbsSub[E_Axis.Y_Axis].CommandAborted=TRUE
		OR fbMcMoveAbsSub[E_Axis.Z_Axis].CommandAborted=TRUE THEN
			eStep:=E_WriteStep.CommandAborted;
	END_IF
	
	//McMoveのエラーをチェック
	IF fbMcMoveAbs[E_Axis.X_Axis].Error=TRUE
		OR fbMcMoveAbs[E_Axis.Y_Axis].Error=TRUE
		OR fbMcMoveAbs[E_Axis.Z_Axis].Error=TRUE
		OR fbMcMoveAbs[E_Axis.Gripper].Error=TRUE
		OR fbMcMoveAbsSub[E_Axis.X_Axis].Error=TRUE
		OR fbMcMoveAbsSub[E_Axis.Y_Axis].Error=TRUE
		OR fbMcMoveAbsSub[E_Axis.Z_Axis].Error=TRUE THEN
			eStep:=E_WriteStep.Error;
	END_IF

END_IF
	
CASE eStep OF

E_WriteStep.Stay:(*初期値、bMoveがTrueになったらステップを進める*)

	IF GVL_Motion.bWriteMoveStart=TRUE THEN
		GVL_Motion.bCircleWriteFin:=FALSE;
		GVL_Motion.bEllipseWriteFin:=FALSE;
		GVL_MitsubishiCom.bToWriteMoving:=TRUE;
		eStep:=E_WriteStep.GripperOpen;
	ELSE
		eStep:=E_WriteStep.Stay;
	END_IF;

E_WriteStep.GripperOpen:(*グリッパーを開ける*)
	
	fbMcMoveAbs[E_Axis.Gripper].Execute:=TRUE;
	fbMcMoveAbs[E_Axis.Gripper].Position:=0;
	fbMcMoveAbs[E_Axis.Gripper].Velocity:=150;

	IF fbMcMoveAbs[E_Axis.Gripper].Done=TRUE THEN
		eStep:=E_WriteStep.ZAxixZeroPotision;
		fbMcMoveAbs[E_Axis.Gripper].Execute:=FALSE;
	END_IF;

E_WriteStep.ZAxixZeroPotision:(*Z軸をゼロポジションへ、衝突回避のためにまずZ軸を移動*)

	fbMcMoveAbs[E_Axis.Z_Axis].Execute:=TRUE;
	fbMcMoveAbs[E_Axis.Z_Axis].Position:=0;
	fbMcMoveAbs[E_Axis.Z_Axis].Velocity:=150;

	IF fbMcMoveAbs[E_Axis.Z_Axis].Done=TRUE THEN
		eStep:=E_WriteStep.XYAxixZeroPotision;
		fbMcMoveAbs[E_Axis.Z_Axis].Execute:=FALSE;
	END_IF;

E_WriteStep.XYAxixZeroPotision:(*Z軸移動後に、X,Y軸をゼロポジションへ移動*)

	fbMcMoveAbs[E_Axis.X_Axis].Execute:=TRUE;
	fbMcMoveAbs[E_Axis.Y_Axis].Execute:=TRUE;
	fbMcMoveAbs[E_Axis.X_Axis].Position:=0;
	fbMcMoveAbs[E_Axis.Y_Axis].Position:=0;
	fbMcMoveAbs[E_Axis.X_Axis].Velocity:=150;
	fbMcMoveAbs[E_Axis.Y_Axis].Velocity:=150;
	
	IF fbMcMoveAbs[E_Axis.X_Axis].Done=TRUE AND fbMcMoveAbs[E_Axis.Y_Axis].Done=TRUE THEN
		eStep:=E_WriteStep.PenGripp;
		fbMcMoveAbs[E_Axis.X_Axis].Execute:=FALSE;
		fbMcMoveAbs[E_Axis.Y_Axis].Execute:=FALSE;
	END_IF;

E_WriteStep.PenGripp:(*ペンを掴む*)

	CASE iStep OF
	0:(*何もしない*)
		iStep:=1;
	
	1:(*ペンを掴む高さに移動*)
		fbMcMoveAbs[E_Axis.Z_Axis].Execute:=TRUE;
		fbMcMoveAbs[E_Axis.Z_Axis].Position:=205.0-GVL.lrPenHalfLength+GVL.lrPenGripLength;
		fbMcMoveAbs[E_Axis.Z_Axis].Velocity:=150;

		IF fbMcMoveAbs[E_Axis.Z_Axis].Done=TRUE THEN
			iStep:=2;
			fbMcMoveAbs[E_Axis.Z_Axis].Execute:=FALSE;
		END_IF;
	
	2:(*グリッパーを閉じてペンを掴む*)
		fbMcMoveAbs[E_Axis.Gripper].Execute:=TRUE;
		
		fbGripperGripAngle(
			lrPenDiameter:=GVL.lrPenDiameter,
			lrGripAngle=>fbMcMoveAbs[E_Axis.Gripper].Position
			);

		fbMcMoveAbs[E_Axis.Gripper].Velocity:=150;
	
		IF fbMcMoveAbs[E_Axis.Gripper].Done=TRUE THEN
			iStep:=3;
			fbMcMoveAbs[E_Axis.Gripper].Execute:=FALSE;
		END_IF;
	
	3:(*Z軸をゼロポジションへ戻す*)
		fbMcMoveAbs[E_Axis.Z_Axis].Execute:=TRUE;
		fbMcMoveAbs[E_Axis.Z_Axis].Position:=0;
		fbMcMoveAbs[E_Axis.Z_Axis].Velocity:=150;
	
		IF fbMcMoveAbs[E_Axis.Z_Axis].Done=TRUE THEN
			eStep:=E_WriteStep.Write;
			fbMcMoveAbs[E_Axis.Z_Axis].Execute:=FALSE;
			iStep:=0;
		END_IF;
	
	END_CASE;

E_WriteStep.Write:(*図形を書いていく*)
	CASE iStep OF
	0:
		iStep:=1;
	
	1:
		fbMotionShapeWrite.stCircleSettingsProp:=stCircleSettings;
		fbMotionShapeWrite.stEllipseSettingsProp:=stEllipseSettings;
		
		fbMotionShapeWrite.bStartProp:=TRUE;
		
		IF fbMotionShapeWrite.bEndProp=TRUE THEN
			fbMotionShapeWrite.bStartProp:=FALSE;
			fbMotionShapeWrite.bEndProp:=FALSE;
			iStep:=2;
		END_IF
		
		fbMotionShapeWrite();
		
	2:
		eStep:=E_WriteStep.ZAxixZeroPotision2;
		iStep:=0;
		
	END_CASE

E_WriteStep.ZAxixZeroPotision2:(*Z軸をゼロポジションへ、衝突回避のためにまずZ軸を移動*)

	fbMcMoveAbs[E_Axis.Z_Axis].Execute:=TRUE;
	fbMcMoveAbs[E_Axis.Z_Axis].Position:=0;
	fbMcMoveAbs[E_Axis.Z_Axis].Velocity:=150;

	IF fbMcMoveAbs[E_Axis.Z_Axis].Done=TRUE THEN
		eStep:=E_WriteStep.XYAxixZeroPotision2;
		fbMcMoveAbs[E_Axis.Z_Axis].Execute:=FALSE;
	END_IF;
	
E_WriteStep.XYAxixZeroPotision2:(*Z軸移動後に、X,Y軸をゼロポジションへ移動*)

	fbMcMoveAbs[E_Axis.X_Axis].Execute:=TRUE;
	fbMcMoveAbs[E_Axis.Y_Axis].Execute:=TRUE;
	fbMcMoveAbs[E_Axis.X_Axis].Position:=0;
	fbMcMoveAbs[E_Axis.Y_Axis].Position:=0;
	fbMcMoveAbs[E_Axis.X_Axis].Velocity:=150;
	fbMcMoveAbs[E_Axis.Y_Axis].Velocity:=150;
	
	IF fbMcMoveAbs[E_Axis.X_Axis].Done=TRUE AND fbMcMoveAbs[E_Axis.Y_Axis].Done=TRUE THEN
		eStep:=E_WriteStep.PenRelease;
		fbMcMoveAbs[E_Axis.X_Axis].Execute:=FALSE;
		fbMcMoveAbs[E_Axis.Y_Axis].Execute:=FALSE;
	END_IF;

E_WriteStep.PenRelease:(*ペンをリリースする*)

	CASE iStep OF
	0:
		iStep:=1;
		
	1:
		fbMcMoveAbs[E_Axis.Z_Axis].Execute:=TRUE;
		fbMcMoveAbs[E_Axis.Z_Axis].Position:=205.0-GVL.lrPenHalfLength+GVL.lrPenGripLength;
		
		IF fbMcMoveAbs[E_Axis.Z_Axis].Done=TRUE THEN
			fbMcMoveAbs[E_Axis.Z_Axis].Execute:=FALSE;
			iStep:=2;
		END_IF;
	
	2:
		fbMcMoveAbs[E_Axis.Gripper].Execute:=TRUE;
		fbMcMoveAbs[E_Axis.Gripper].Position:=0;
	
		IF fbMcMoveAbs[E_Axis.Gripper].Done=TRUE THEN
			fbMcMoveAbs[E_Axis.Gripper].Execute:=FALSE;
			iStep:=3;
		END_IF;
	
	3:
		fbMcMoveAbs[E_Axis.Z_Axis].Execute:=TRUE;
		fbMcMoveAbs[E_Axis.Z_Axis].Position:=0;

		IF fbMcMoveAbs[E_Axis.Z_Axis].Done=TRUE THEN
			eStep:=E_WriteStep.Stay;
			fbMcMoveAbs[E_Axis.Z_Axis].Execute:=FALSE;
			iStep:=0;
			GVL_MitsubishiCom.bToWriteMoving:=FALSE;
		END_IF;
	
	END_CASE;
	
E_WriteStep.CommandAborted://McMoveコマンドアボート時の処理	

	iStep:=0;
	fbMcMoveAbs[E_Axis.X_Axis].Execute:=FALSE;
	fbMcMoveAbs[E_Axis.Y_Axis].Execute:=FALSE;
	fbMcMoveAbs[E_Axis.Z_Axis].Execute:=FALSE;
	fbMcMoveAbs[E_Axis.Gripper].Execute:=FALSE;

	fbMcMoveAbsSub[E_Axis.X_Axis].Execute:=FALSE;
	fbMcMoveAbsSub[E_Axis.Y_Axis].Execute:=FALSE;
	fbMcMoveAbsSub[E_Axis.Z_Axis].Execute:=FALSE;
	
	GVL_MitsubishiCom.bToAutoMoveResetting:=FALSE;

	IF fbMcMoveAbs[E_Axis.X_Axis].CommandAborted=FALSE
		AND fbMcMoveAbs[E_Axis.Y_Axis].CommandAborted=FALSE
		AND fbMcMoveAbs[E_Axis.Z_Axis].CommandAborted=FALSE
		AND fbMcMoveAbs[E_Axis.Gripper].CommandAborted=FALSE
		AND fbMcMoveAbsSub[E_Axis.X_Axis].CommandAborted=FALSE
		AND fbMcMoveAbsSub[E_Axis.Y_Axis].CommandAborted=FALSE
		AND fbMcMoveAbsSub[E_Axis.Z_Axis].CommandAborted=FALSE THEN
			eStep:=E_WriteStep.Reset;
	END_IF

E_WriteStep.Error://McMoveエラー時の処理	

	iStep:=0;
	fbMcMoveAbs[E_Axis.X_Axis].Execute:=FALSE;
	fbMcMoveAbs[E_Axis.Y_Axis].Execute:=FALSE;
	fbMcMoveAbs[E_Axis.Z_Axis].Execute:=FALSE;
	fbMcMoveAbs[E_Axis.Gripper].Execute:=FALSE;

	fbMcMoveAbsSub[E_Axis.X_Axis].Execute:=FALSE;
	fbMcMoveAbsSub[E_Axis.Y_Axis].Execute:=FALSE;
	fbMcMoveAbsSub[E_Axis.Z_Axis].Execute:=FALSE;
	
	GVL_MitsubishiCom.bToAutoMoveResetting:=FALSE;

	if fbMcMoveAbs[E_Axis.X_Axis].Error=FALSE
		AND fbMcMoveAbs[E_Axis.Y_Axis].Error=FALSE
		AND fbMcMoveAbs[E_Axis.Z_Axis].Error=FALSE
		AND fbMcMoveAbs[E_Axis.Gripper].Error=FALSE
		AND fbMcMoveAbsSub[E_Axis.X_Axis].Error=FALSE
		AND fbMcMoveAbsSub[E_Axis.Y_Axis].Error=FALSE
		AND fbMcMoveAbsSub[E_Axis.Z_Axis].Error=FALSE THEN
			eStep:=E_WriteStep.Reset;
	END_IF	
	
E_WriteStep.Reset://McMoveのコマンドアボートorエラー後のリセット動作

	CASE iStep OF

	0:
		IF GVL_MitsubishiCom.bFromAutoMoveReset=TRUE AND GVL_Alarm.fbMachineState.bStopMachine=FALSE THEN
			GVL_MitsubishiCom.bToAutoMoveResetting:=TRUE;
			iStep:=1;
			//FB_MotionShapeWriteのリセット
			fbMotionShapeWrite.iNextProp:=0;
		END_IF

	1:
		fbMcMoveAbs[E_Axis.Gripper].Execute:=TRUE;
		fbMcMoveAbs[E_Axis.Gripper].Position:=0;
		fbMcMoveAbs[E_Axis.Gripper].Velocity:=150;

		IF fbMcMoveAbs[E_Axis.Gripper].Done=TRUE THEN
			iStep:=2;
			fbMcMoveAbs[E_Axis.Gripper].Execute:=FALSE;
		END_IF;

	2:
		fbMcMoveAbs[E_Axis.Z_Axis].Execute:=TRUE;
		fbMcMoveAbs[E_Axis.Z_Axis].Position:=0;
		fbMcMoveAbs[E_Axis.Z_Axis].Velocity:=150;

		IF fbMcMoveAbs[E_Axis.Z_Axis].Done=TRUE THEN
			iStep:=3;
			fbMcMoveAbs[E_Axis.Z_Axis].Execute:=FALSE;
		END_IF;

	3:
		fbMcMoveAbs[E_Axis.X_Axis].Execute:=TRUE;
		fbMcMoveAbs[E_Axis.Y_Axis].Execute:=TRUE;
		fbMcMoveAbs[E_Axis.X_Axis].Position:=0;
		fbMcMoveAbs[E_Axis.Y_Axis].Position:=0;
		fbMcMoveAbs[E_Axis.X_Axis].Velocity:=150;
		fbMcMoveAbs[E_Axis.Y_Axis].Velocity:=150;

		IF fbMcMoveAbs[E_Axis.X_Axis].Done=TRUE AND fbMcMoveAbs[E_Axis.Y_Axis].Done=TRUE THEN
			fbMcMoveAbs[E_Axis.X_Axis].Execute:=FALSE;
			fbMcMoveAbs[E_Axis.Y_Axis].Execute:=FALSE;
			iStep:=0;
			eStep:=E_WriteStep.Stay;

			GVL_MitsubishiCom.bToWriteMoving:=FALSE;
			GVL_MitsubishiCom.bToAutoMoveResetting:=FALSE;
		END_IF;

	END_CASE
	
END_CASE;

	aMotion();]]></ST>
    </Implementation>
    <Action Name="aMotion" Id="{6baf6034-54bc-4a63-a4b5-3ae8298a5b7e}">
      <Implementation>
        <ST><![CDATA[//各軸とグリッパーの駆動用
	//メイン
	fbMcMoveAbs[E_Axis.X_Axis](
		Axis			:=GVL_Axis.stAxis[E_Axis.X_Axis],
		BufferMode		:=MC_BlendingNext,
	);

	fbMcMoveAbs[E_Axis.Y_Axis](
		Axis			:=GVL_Axis.stAxis[E_Axis.Y_Axis],
		BufferMode		:=MC_BlendingNext,
	);

	fbMcMoveAbs[E_Axis.Z_Axis](
		Axis			:=GVL_Axis.stAxis[E_Axis.Z_Axis],
		BufferMode		:=MC_BlendingNext,
	);
	
	fbMcMoveAbs[E_Axis.Gripper](
		Axis			:=GVL_Axis.stAxis[E_Axis.Gripper],
		BufferMode		:=MC_BlendingNext,
	);
	
	//ここからサブ、サブはグリッパー無し
	fbMcMoveAbsSub[E_Axis.X_Axis](
		Axis			:=GVL_Axis.stAxis[E_Axis.X_Axis],
		BufferMode		:=MC_BlendingNext,
	);

	fbMcMoveAbsSub[E_Axis.Y_Axis](
		Axis			:=GVL_Axis.stAxis[E_Axis.Y_Axis],
		BufferMode		:=MC_BlendingNext,
	);

	fbMcMoveAbsSub[E_Axis.Z_Axis](
		Axis			:=GVL_Axis.stAxis[E_Axis.Z_Axis],
		BufferMode		:=MC_BlendingNext,
	);]]></ST>
      </Implementation>
    </Action>
    <LineIds Name="P_MotionWrite">
      <LineId Id="2860" Count="126" />
      <LineId Id="2997" Count="0" />
      <LineId Id="3191" Count="0" />
      <LineId Id="2998" Count="9" />
      <LineId Id="3010" Count="1" />
      <LineId Id="3019" Count="124" />
      <LineId Id="3211" Count="0" />
      <LineId Id="3146" Count="43" />
      <LineId Id="861" Count="0" />
    </LineIds>
    <LineIds Name="P_MotionWrite.aMotion">
      <LineId Id="3" Count="0" />
      <LineId Id="79" Count="0" />
      <LineId Id="4" Count="1" />
      <LineId Id="9" Count="0" />
      <LineId Id="16" Count="3" />
      <LineId Id="23" Count="0" />
      <LineId Id="30" Count="3" />
      <LineId Id="37" Count="0" />
      <LineId Id="44" Count="3" />
      <LineId Id="51" Count="0" />
      <LineId Id="1" Count="0" />
      <LineId Id="58" Count="0" />
      <LineId Id="78" Count="0" />
      <LineId Id="60" Count="13" />
    </LineIds>
  </POU>
</TcPlcObject>