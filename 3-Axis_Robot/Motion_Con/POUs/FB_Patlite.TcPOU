<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_Patlite" Id="{64d6703e-381b-4b78-a0a1-7f429646ef42}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_Patlite IMPLEMENTS I_Patlite
VAR
	rbRedLed					:REFERENCE TO BOOL;					//パトライト赤LED
	rbGreenLed					:REFERENCE TO BOOL;					//パトライト緑LED
	rbBlueLed					:REFERENCE TO BOOL;					//パトライト青LED
	rbBuzzerON					:REFERENCE TO BOOL;					//パトライトブザー
	
	rbSwitch					:REFERENCE TO BOOL; 				//パトライトスイッチ
	
	eMachineState				:E_MachineState;
	
	//ブザー制御用
	bBuzzerFlag					:BOOL;
	
	//LED制御用
	eLedColor					:E_LedColor;
	tBlinkTime					:TIME;
	fbTonBlink1					:ton;
	fbTonBlink2					:ton;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[Buzzer();
LED();]]></ST>
    </Implementation>
    <Property Name="bSwitchProp" Id="{7a6ac67c-81a8-4660-b834-e4324f3fadd7}">
      <Declaration><![CDATA[{warning 'プロパティ実装を追加'}
PROPERTY bSwitchProp : BOOL
]]></Declaration>
      <Get Name="Get" Id="{7b057052-63f2-4837-b765-68e3dfe16a2a}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[bSwitchProp:=rbSwitch;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="Buzzer" Id="{c7e865c0-fd52-4449-91af-8ccd99b09f2d}">
      <Declaration><![CDATA[{warning 'メソッド実装を追加'}
METHOD Buzzer : BOOL
VAR_INPUT
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[//---マシーンステートごとにパトライトを制御---
CASE eMachineState OF
	
	E_MachineState.Critical:
		IF bBuzzerFlag=FALSE THEN
			rbBuzzerON:=TRUE;
		END_IF
	
	E_MachineState.Error:
		IF bBuzzerFlag=FALSE THEN
			rbBuzzerON:=TRUE;
		END_IF
	
	E_MachineState.Warning:
		IF bBuzzerFlag=FALSE THEN
			rbBuzzerON:=TRUE;
		END_IF
		
	E_MachineState.Stay:
		rbBuzzerON:=FALSE;
		bBuzzerFlag:=FALSE;
	
	E_MachineState.Stop:
		rbBuzzerON:=FALSE;
		bBuzzerFlag:=FALSE;

	E_MachineState.Moving:
		rbBuzzerON:=FALSE;
		bBuzzerFlag:=FALSE;
	
END_CASE;

//---スイッチが押されたらブザー停止---
IF rbSwitch=TRUE THEN
	rbBuzzerON:=FALSE;
	bBuzzerFlag:=TRUE;
END_IF]]></ST>
      </Implementation>
    </Method>
    <Property Name="eMachineStateProp" Id="{8aa7813b-e06a-4067-99c1-d15a2b1eea8b}">
      <Declaration><![CDATA[{warning 'プロパティ実装を追加'}
PROPERTY eMachineStateProp : E_MachineState
]]></Declaration>
      <Set Name="Set" Id="{8612fcd8-9150-43fb-a4e5-d0a8ba6e659a}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[eMachineState:=eMachineStateProp;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Method Name="FB_init" Id="{92561c8a-1212-40df-8cc5-0f26136804c1}">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	
	rbRedLed					:REFERENCE TO BOOL;					//パトライト赤LED
	rbGreenLed					:REFERENCE TO BOOL;					//パトライト緑LED
	rbBlueLed					:REFERENCE TO BOOL;					//パトライト青LED
	rbBuzzerON					:REFERENCE TO BOOL;					//パトライトブザー
	
	rbSwitch					:REFERENCE TO BOOL; 				//パトライトスイッチ
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[THIS^.rbRedLed REF=rbRedLed;
THIS^.rbGreenLed REF=rbGreenLed;
THIS^.rbBlueLed REF=rbBlueLed;
THIS^.rbBuzzerON REF=rbBuzzerON;
THIS^.rbSwitch REF=rbSwitch;]]></ST>
      </Implementation>
    </Method>
    <Method Name="LED" Id="{b6deb205-6f8f-48a1-84ac-fb6f5e15b6b7}">
      <Declaration><![CDATA[{warning 'メソッド実装を追加'}
METHOD LED : BOOL
VAR_INPUT
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[//---マシーンステートごとにパトライトを制御---
CASE eMachineState OF
	
	E_MachineState.Critical:
		eLedColor:=E_LedColor.Blue;
		tBlinkTime:=T#100MS;
	
	E_MachineState.Error:
		eLedColor:=E_LedColor.Red;
		tBlinkTime:=T#100MS;
	
	E_MachineState.Warning:
		eLedColor:=E_LedColor.Yellow;
		tBlinkTime:=T#100MS;
		
	E_MachineState.Stay:
		eLedColor:=E_LedColor.Cyan;
		tBlinkTime:=T#0S;
	
	E_MachineState.Stop:
		eLedColor:=E_LedColor.White;
		tBlinkTime:=T#0S;

	E_MachineState.Moving:
		eLedColor:=E_LedColor.Green;
		tBlinkTime:=T#0S;

END_CASE;

//---ブリンク用のタイマー---
fbTonBlink1(IN:=NOT fbTonBlink2.Q,PT:=tBlinkTime,Q=>fbTonBlink2.IN,ET=>);
fbTonBlink2(IN:=,PT:=tBlinkTime,Q=>,ET=>);

//---LEDを点灯制御---
IF fbTonBlink1.Q=FALSE OR tBlinkTime=T#0S  THEN;
	CASE eLedColor OF
	E_LedColor.Red:
		rbRedLed:=TRUE;
		rbGreenLed:=FALSE;
		rbBlueLed:=FALSE;
	
	E_LedColor.Green:
		rbRedLed:=FALSE;
		rbGreenLed:=TRUE;
		rbBlueLed:=FALSE;	
	
	E_LedColor.Blue:
		rbRedLed:=FALSE;
		rbGreenLed:=FALSE;
		rbBlueLed:=TRUE;
		
	E_LedColor.Yellow:
		rbRedLed:=TRUE;
		rbGreenLed:=TRUE;
		rbBlueLed:=FALSE;
	
	E_LedColor.Cyan:
		rbRedLed:=FALSE;
		rbGreenLed:=TRUE;
		rbBlueLed:=TRUE;
	
	E_LedColor.Purple:
		rbRedLed:=TRUE;
		rbGreenLed:=FALSE;
		rbBlueLed:=TRUE;
	
	E_LedColor.White:
		rbRedLed:=TRUE;
		rbGreenLed:=TRUE;
		rbBlueLed:=TRUE;
	
	E_LedColor.Black:
		rbRedLed:=FALSE;
		rbGreenLed:=FALSE;
		rbBlueLed:=FALSE;
	END_CASE
ELSE;
	rbRedLed:=FALSE;
	rbGreenLed:=FALSE;
	rbBlueLed:=FALSE;
END_IF;]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_Patlite">
      <LineId Id="139" Count="0" />
      <LineId Id="17" Count="0" />
    </LineIds>
    <LineIds Name="FB_Patlite.bSwitchProp.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_Patlite.Buzzer">
      <LineId Id="57" Count="0" />
      <LineId Id="8" Count="2" />
      <LineId Id="13" Count="4" />
      <LineId Id="20" Count="4" />
      <LineId Id="27" Count="4" />
      <LineId Id="34" Count="3" />
      <LineId Id="40" Count="3" />
      <LineId Id="46" Count="8" />
      <LineId Id="7" Count="0" />
    </LineIds>
    <LineIds Name="FB_Patlite.eMachineStateProp.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_Patlite.FB_init">
      <LineId Id="7" Count="0" />
      <LineId Id="20" Count="0" />
      <LineId Id="22" Count="0" />
      <LineId Id="21" Count="0" />
      <LineId Id="23" Count="0" />
    </LineIds>
    <LineIds Name="FB_Patlite.LED">
      <LineId Id="66" Count="5" />
      <LineId Id="75" Count="3" />
      <LineId Id="82" Count="3" />
      <LineId Id="89" Count="3" />
      <LineId Id="95" Count="3" />
      <LineId Id="101" Count="3" />
      <LineId Id="107" Count="0" />
      <LineId Id="11" Count="0" />
      <LineId Id="111" Count="0" />
      <LineId Id="108" Count="1" />
      <LineId Id="12" Count="0" />
      <LineId Id="110" Count="0" />
      <LineId Id="13" Count="46" />
      <LineId Id="7" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>